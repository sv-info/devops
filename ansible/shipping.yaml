- name: SHIPPING SET UP
  hosts: shipping
  become: yes
  tasks:
  - name: Install maven
    ansible.builtin.dnf:
      name: "{{ item }}"
      state: present
    loop:
    - maven
    - mysql
  - name: install PyMySQL and cryptography 
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
    - cryptography
    - PyMySQL
  - name: create user
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      system: true
      home: /app
  - name: create directory
    ansible.builtin.file:
      path: /app
      state: directory
  - name: Download code
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip 
      dest: /tmp/shipping.zip
  - name: Extract code
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes
  - name: install maven dependencies
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name: create service 
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/shipping.service
  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true
  - name: starte and enable
    ansible.builtin.service:
      name: user
      state: started
      enabled: yes
  - name: import data
    tags:
    - import
    community.mysql.mysql_db:
      name: all
      login_user: root
      login_password: RoboShop@1
      login_host: mysql.svdvps.online
      state: import
      target: "{{item}}"
    loop:
    - /app/db/schema.sql
    - /app/db/app-user.sql
    - /app/db/master-data.sql
  - name: restart
    ansible.builtin.service:
      name: shipping
      state: restarted

 